{"version":3,"sources":["../node_modules/@sanity/block-content-to-react/lib/BlockContent.js","../node_modules/@sanity/block-content-to-hyperscript/internals.js","../node_modules/@sanity/block-content-to-hyperscript/lib/getImageUrl.js","../node_modules/@sanity/block-content-to-hyperscript/lib/mergeSerializers.js","../node_modules/@sanity/block-content-to-hyperscript/lib/internals.js","../node_modules/@sanity/block-content-to-hyperscript/lib/serializers.js","../node_modules/@sanity/block-content-to-hyperscript/node_modules/@sanity/generate-help-url/index.js","../node_modules/@sanity/block-content-to-hyperscript/node_modules/@sanity/image-url/index.js","../node_modules/@sanity/block-content-to-hyperscript/node_modules/@sanity/image-url/lib/builder.js","../node_modules/@sanity/block-content-to-hyperscript/node_modules/@sanity/image-url/lib/urlForImage.js","../node_modules/@sanity/block-content-to-hyperscript/node_modules/@sanity/image-url/lib/parseSource.js","../node_modules/@sanity/block-content-to-hyperscript/node_modules/@sanity/image-url/lib/parseAssetId.js","../node_modules/@sanity/block-content-to-hyperscript/lib/blocksToNodes.js","../node_modules/@sanity/block-content-to-hyperscript/lib/buildMarksTree.js","../node_modules/@sanity/block-content-to-hyperscript/lib/nestLists.js","../node_modules/@sanity/block-content-to-hyperscript/lib/generateKeys.js","../node_modules/@sanity/block-content-to-react/lib/targets/dom.js"],"names":["React","__webpack_require__","PropTypes","internals","_require","serializers","serializeSpan","renderProps","getImageUrl","blocksToNodes","mergeSerializers","renderNode","createElement","SanityBlockContent","props","customSerializers","defaultSerializers","blockProps","Object","assign","blocks","propTypes","className","string","renderContainerOnSingleChild","bool","projectId","dataset","imageOptions","object","shape","types","marks","list","func","listItem","block","span","oneOfType","arrayOf","_type","isRequired","defaultProps","module","exports","generateHelpUrl","urlBuilder","objectAssign","enc","encodeURIComponent","materializeError","node","options","asset","Error","url","query","keys","length","map","key","join","getQueryString","_ref","image","toString","_typeof","Symbol","iterator","obj","constructor","prototype","userSerializers","reduce","acc","type","getSerializers","_blocksToNodes","h","serializerOpts","serializeOptions","useDashedStyles","RawMarkSerializer","tag","children","style","test","img","src","isInline","strong","bind","em","code","underline","text-decoration","textDecoration","strike-through","link","href","mark","blockType","serializer","_props$node","markType","console","warn","markFallback","hardBreak","container","text","undefined","empty","index","child","i","serializeNode","serializedNode","_key","slug","default","defineProperty","value","clientConfig","ImageUrlBuilder","baseUrl","apiHost","replace","_urlForImage","__esModule","_defineProperty","enumerable","configurable","writable","_defineProperties","target","descriptor","validFits","validCrops","parent","instance","Constructor","TypeError","_classCallCheck","this","arguments","source","ownKeys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","_objectSpread","protoProps","staticProps","withOptions","_dataset","_projectId","_bg","bg","_width","width","_height","height","x","y","focalPoint","_maxWidth","maxWidth","_minWidth","minWidth","_maxHeight","maxHeight","_minHeight","minHeight","_blur","blur","_sharpen","sharpen","left","top","rect","_format","format","_invert","invert","_orientation","orientation","_quality","quality","download","flipHorizontal","flipVertical","ignoreImageParams","indexOf","fit","crop","spec","_parseSource","_parseAssetId","Math","round","right","bottom","hotSpotVerticalRadius","hotspot","hotSpotHorizontalRadius","hotSpotCenterX","hotSpotCenterY","result","desiredAspectRatio","_top","hotspotXCenter","_left","max","floor","cdnUrl","filename","id","params","isEffectiveCrop","push","SPEC_NAME_TO_URL_NAME_MAPPINGS","mapping","arr","_mapping","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","_s","_i","next","done","err","_iterableToArrayLimit","_nonIterableRest","specName","param","specToImageUrl","get","_interopRequireDefault","urlToId","parts","split","slice","_id","applyDefaults","_slicedToArray","ref","_ref$split2","dimensionString","example","_dimensionString$spli2","imgWidthStr","imgHeightStr","isFinite","buildMarksTree","nestLists","generateKeys","optionProps","isDefined","val","defaults","isListItem","properties","rawBlocks","keyedBlocks","listNestMode","opts","siblings","level","serializeList","serializeListItem","findListItemIndex","isSpan","serializeBlock","Boolean","nodes","containerProps","defaultMarks","sortMarksByOccurences","spans","markOccurences","occurences","siblingIndex","sibling","sortByOccurence","markA","markB","aOccurences","bOccurences","aDefaultPos","bDefaultPos","sort","markDefs","sortedMarks","rootNode","nodeStack","marksNeeded","pos","markKey","splice","currentNode","findLastParentNode","find","def","lines","line","isListBlock","blockMatchesList","listFromBlock","lastChild","findListMatching","matching","filterOnType","mode","tree","currentList","newList","lastListItem","newLastChild","match","_match","checksum","str","hash","strlen","charCodeAt","item","JSON","stringify","_getSerializers","nestMarks"],"mappings":"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","file":"static/js/0.23fcc71b.chunk.js","sourcesContent":["'use strict';\n\nvar React = require('react');\n\nvar PropTypes = require('prop-types');\n\nvar internals = require('@sanity/block-content-to-hyperscript/internals');\n\nvar _require = require('./targets/dom'),\n    serializers = _require.serializers,\n    serializeSpan = _require.serializeSpan,\n    renderProps = _require.renderProps;\n\nvar getImageUrl = internals.getImageUrl,\n    blocksToNodes = internals.blocksToNodes,\n    mergeSerializers = internals.mergeSerializers;\nvar renderNode = React.createElement;\n\nvar SanityBlockContent = function SanityBlockContent(props) {\n  var customSerializers = mergeSerializers(SanityBlockContent.defaultSerializers, props.serializers);\n  var blockProps = Object.assign({}, renderProps, props, {\n    serializers: customSerializers,\n    blocks: props.blocks || []\n  });\n  return blocksToNodes(renderNode, blockProps, serializers, serializeSpan);\n}; // Expose default serializers to the user\n\n\nSanityBlockContent.defaultSerializers = serializers; // Expose logic for building image URLs from an image reference/node\n\nSanityBlockContent.getImageUrl = getImageUrl;\nSanityBlockContent.propTypes = {\n  className: PropTypes.string,\n  renderContainerOnSingleChild: PropTypes.bool,\n  // When rendering images, we need project id and dataset, unless images are materialized\n  projectId: PropTypes.string,\n  dataset: PropTypes.string,\n  imageOptions: PropTypes.object,\n  serializers: PropTypes.shape({\n    // Common overrides\n    types: PropTypes.object,\n    marks: PropTypes.object,\n    // Less common overrides\n    list: PropTypes.func,\n    listItem: PropTypes.func,\n    // Low-level serializers\n    block: PropTypes.func,\n    span: PropTypes.func\n  }),\n  blocks: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.shape({\n    _type: PropTypes.string.isRequired\n  })), PropTypes.shape({\n    _type: PropTypes.string.isRequired\n  })]).isRequired\n};\nSanityBlockContent.defaultProps = {\n  renderContainerOnSingleChild: false,\n  serializers: {},\n  imageOptions: {}\n};\nmodule.exports = SanityBlockContent;","module.exports = require('./lib/internals');","'use strict';\n\nvar generateHelpUrl = require('@sanity/generate-help-url');\n\nvar urlBuilder = require('@sanity/image-url');\n\nvar objectAssign = require('object-assign');\n\nvar enc = encodeURIComponent;\nvar materializeError = 'You must either:\\n  - Pass `projectId` and `dataset` to the block renderer\\n  - Materialize images to include the `url` field.\\n\\nFor more information, see ' + generateHelpUrl('block-content-image-materializing');\n\nvar getQueryString = function getQueryString(options) {\n  var query = options.imageOptions;\n  var keys = Object.keys(query);\n\n  if (!keys.length) {\n    return '';\n  }\n\n  var params = keys.map(function (key) {\n    return enc(key) + '=' + enc(query[key]);\n  });\n  return '?' + params.join('&');\n};\n\nvar buildUrl = function buildUrl(props) {\n  var node = props.node,\n      options = props.options;\n  var projectId = options.projectId,\n      dataset = options.dataset;\n  var asset = node.asset;\n\n  if (!asset) {\n    throw new Error('Image does not have required `asset` property');\n  }\n\n  if (asset.url) {\n    return asset.url + getQueryString(options);\n  }\n\n  if (!projectId || !dataset) {\n    throw new Error(materializeError);\n  }\n\n  var ref = asset._ref;\n\n  if (!ref) {\n    throw new Error('Invalid image reference in block, no `_ref` found on `asset`');\n  }\n\n  return urlBuilder(objectAssign({\n    projectId: projectId,\n    dataset: dataset\n  }, options.imageOptions || {})).image(node).toString();\n};\n\nmodule.exports = buildUrl;","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar objectAssign = require('object-assign');\n\nvar isDefined = function isDefined(val) {\n  return typeof val !== 'undefined';\n}; // Recursively merge/replace default serializers with user-specified serializers\n\n\nmodule.exports = function mergeSerializers(defaultSerializers, userSerializers) {\n  return Object.keys(defaultSerializers).reduce(function (acc, key) {\n    var type = _typeof(defaultSerializers[key]);\n\n    if (type === 'function') {\n      acc[key] = isDefined(userSerializers[key]) ? userSerializers[key] : defaultSerializers[key];\n    } else if (type === 'object') {\n      acc[key] = objectAssign({}, defaultSerializers[key], userSerializers[key]);\n    } else {\n      acc[key] = typeof userSerializers[key] === 'undefined' ? defaultSerializers[key] : userSerializers[key];\n    }\n\n    return acc;\n  }, {});\n};","'use strict';\n\nvar getSerializers = require('./serializers');\n\nvar _blocksToNodes = require('./blocksToNodes');\n\nvar getImageUrl = require('./getImageUrl');\n\nvar mergeSerializers = require('./mergeSerializers');\n\nmodule.exports = {\n  blocksToNodes: function blocksToNodes(renderNode, props, defaultSerializers, serializeSpan) {\n    if (defaultSerializers) {\n      return _blocksToNodes(renderNode, props, defaultSerializers, serializeSpan);\n    } // Backwards-compatibility\n\n\n    var serializers = getSerializers(renderNode);\n    return _blocksToNodes(renderNode, props, serializers.defaultSerializers, serializers.serializeSpan);\n  },\n  getSerializers: getSerializers,\n  getImageUrl: getImageUrl,\n  mergeSerializers: mergeSerializers\n};","'use strict';\n\nvar objectAssign = require('object-assign');\n\nvar getImageUrl = require('./getImageUrl');\n\nmodule.exports = function (h, serializerOpts) {\n  var serializeOptions = serializerOpts || {\n    useDashedStyles: false // Low-level block serializer\n\n  };\n\n  function BlockSerializer(props) {\n    var node = props.node,\n        serializers = props.serializers,\n        options = props.options,\n        isInline = props.isInline,\n        children = props.children;\n    var blockType = node._type;\n    var serializer = serializers.types[blockType];\n\n    if (!serializer) {\n      throw new Error('Unknown block type \"' + blockType + '\", please specify a serializer for it in the `serializers.types` prop');\n    }\n\n    return h(serializer, {\n      node: node,\n      options: options,\n      isInline: isInline\n    }, children);\n  } // Low-level span serializer\n\n\n  function SpanSerializer(props) {\n    var _props$node = props.node,\n        mark = _props$node.mark,\n        children = _props$node.children;\n    var isPlain = typeof mark === 'string';\n    var markType = isPlain ? mark : mark._type;\n    var serializer = props.serializers.marks[markType];\n\n    if (!serializer) {\n      // @todo Revert back to throwing errors?\n      // eslint-disable-next-line no-console\n      console.warn('Unknown mark type \"' + markType + '\", please specify a serializer for it in the `serializers.marks` prop');\n      return h(props.serializers.markFallback, null, children);\n    }\n\n    return h(serializer, props.node, children);\n  } // Low-level list serializer\n\n\n  function ListSerializer(props) {\n    var tag = props.type === 'bullet' ? 'ul' : 'ol';\n    return h(tag, null, props.children);\n  } // Low-level list item serializer\n\n\n  function ListItemSerializer(props) {\n    var children = !props.node.style || props.node.style === 'normal' ? // Don't wrap plain text in paragraphs inside of a list item\n    props.children : // But wrap any other style in whatever the block serializer says to use\n    h(props.serializers.types.block, props, props.children);\n    return h('li', null, children);\n  } // Renderer of an actual block of type `block`. Confusing, we know.\n\n\n  function BlockTypeSerializer(props) {\n    var style = props.node.style || 'normal';\n\n    if (/^h\\d/.test(style)) {\n      return h(style, null, props.children);\n    }\n\n    return style === 'blockquote' ? h('blockquote', null, props.children) : h('p', null, props.children);\n  } // Serializers for things that can be directly attributed to a tag without any props\n  // We use partial application to do this, passing the tag name as the first argument\n\n\n  function RawMarkSerializer(tag, props) {\n    return h(tag, null, props.children);\n  }\n\n  function UnderlineSerializer(props) {\n    var style = serializeOptions.useDashedStyles ? {\n      'text-decoration': 'underline'\n    } : {\n      textDecoration: 'underline'\n    };\n    return h('span', {\n      style: style\n    }, props.children);\n  }\n\n  function StrikeThroughSerializer(props) {\n    return h('del', null, props.children);\n  }\n\n  function LinkSerializer(props) {\n    return h('a', {\n      href: props.mark.href\n    }, props.children);\n  }\n\n  function ImageSerializer(props) {\n    if (!props.node.asset) {\n      return null;\n    }\n\n    var img = h('img', {\n      src: getImageUrl(props)\n    });\n    return props.isInline ? img : h('figure', null, img);\n  } // Serializer that recursively calls itself, producing a hyperscript tree of spans\n\n\n  function serializeSpan(span, serializers, index, options) {\n    if (span === '\\n' && serializers.hardBreak) {\n      return h(serializers.hardBreak, {\n        key: 'hb-' + index\n      });\n    }\n\n    if (typeof span === 'string') {\n      return serializers.text ? h(serializers.text, {\n        key: 'text-' + index\n      }, span) : span;\n    }\n\n    var children = void 0;\n\n    if (span.children) {\n      children = {\n        children: span.children.map(function (child, i) {\n          return options.serializeNode(child, i, span.children, true);\n        })\n      };\n    }\n\n    var serializedNode = objectAssign({}, span, children);\n    return h(serializers.span, {\n      key: span._key || 'span-' + index,\n      node: serializedNode,\n      serializers: serializers\n    });\n  }\n\n  var HardBreakSerializer = function HardBreakSerializer() {\n    return h('br');\n  };\n\n  var defaultMarkSerializers = {\n    strong: RawMarkSerializer.bind(null, 'strong'),\n    em: RawMarkSerializer.bind(null, 'em'),\n    code: RawMarkSerializer.bind(null, 'code'),\n    underline: UnderlineSerializer,\n    'strike-through': StrikeThroughSerializer,\n    link: LinkSerializer\n  };\n  var defaultSerializers = {\n    // Common overrides\n    types: {\n      block: BlockTypeSerializer,\n      image: ImageSerializer\n    },\n    marks: defaultMarkSerializers,\n    // Less common overrides\n    list: ListSerializer,\n    listItem: ListItemSerializer,\n    block: BlockSerializer,\n    span: SpanSerializer,\n    hardBreak: HardBreakSerializer,\n    // Container element\n    container: 'div',\n    // When we can't resolve the mark properly, use this renderer as the container\n    markFallback: 'span',\n    // Allow overriding text renderer, but leave undefined to just use plain strings by default\n    text: undefined,\n    // Empty nodes (React uses null, hyperscript with empty strings)\n    empty: ''\n  };\n  return {\n    defaultSerializers: defaultSerializers,\n    serializeSpan: serializeSpan\n  };\n};","var baseUrl = 'https://docs.sanity.io/help/';\n\nmodule.exports = function generateHelpUrl(slug) {\n  return baseUrl + slug;\n};","// eslint-disable-next-line import/no-commonjs\nmodule.exports = require('./lib/builder').default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = urlBuilder;\n\nvar _urlForImage = _interopRequireDefault(require(\"./urlForImage\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nvar validFits = ['clip', 'crop', 'fill', 'fillmax', 'max', 'scale', 'min'];\nvar validCrops = ['top', 'bottom', 'left', 'right', 'center', 'focalpoint', 'entropy'];\n\nvar ImageUrlBuilder =\n/*#__PURE__*/\nfunction () {\n  function ImageUrlBuilder(parent, options) {\n    _classCallCheck(this, ImageUrlBuilder);\n\n    if (parent) {\n      this.options = _objectSpread({}, parent.options || {}, options || {});\n    } else {\n      this.options = options || {};\n    }\n  }\n\n  _createClass(ImageUrlBuilder, [{\n    key: \"withOptions\",\n    value: function withOptions(options) {\n      return new ImageUrlBuilder(this, options);\n    } // The image to be represented. Accepts a Sanity 'image'-document, 'asset'-document or\n    // _id of asset. To get the benefit of automatic hot-spot/crop integration with the content\n    // studio, the 'image'-document must be provided.\n\n  }, {\n    key: \"image\",\n    value: function image(source) {\n      return this.withOptions({\n        source: source\n      });\n    } // Specify the dataset\n\n  }, {\n    key: \"dataset\",\n    value: function dataset(_dataset) {\n      return this.withOptions({\n        dataset: _dataset\n      });\n    } // Specify the projectId\n\n  }, {\n    key: \"projectId\",\n    value: function projectId(_projectId) {\n      return this.withOptions({\n        projectId: _projectId\n      });\n    } // Specify background color\n\n  }, {\n    key: \"bg\",\n    value: function bg(_bg) {\n      return this.withOptions({\n        bg: _bg\n      });\n    } // Specify the width of the image in pixels\n\n  }, {\n    key: \"width\",\n    value: function width(_width) {\n      return this.withOptions({\n        width: _width\n      });\n    } // Specify the height of the image in pixels\n\n  }, {\n    key: \"height\",\n    value: function height(_height) {\n      return this.withOptions({\n        height: _height\n      });\n    } // Specify focal point in fraction of image dimensions. Each component 0.0-1.0\n\n  }, {\n    key: \"focalPoint\",\n    value: function focalPoint(x, y) {\n      return this.withOptions({\n        focalPoint: {\n          x: x,\n          y: y\n        }\n      });\n    }\n  }, {\n    key: \"maxWidth\",\n    value: function maxWidth(_maxWidth) {\n      return this.withOptions({\n        maxWidth: _maxWidth\n      });\n    }\n  }, {\n    key: \"minWidth\",\n    value: function minWidth(_minWidth) {\n      return this.withOptions({\n        minWidth: _minWidth\n      });\n    }\n  }, {\n    key: \"maxHeight\",\n    value: function maxHeight(_maxHeight) {\n      return this.withOptions({\n        maxHeight: _maxHeight\n      });\n    }\n  }, {\n    key: \"minHeight\",\n    value: function minHeight(_minHeight) {\n      return this.withOptions({\n        minHeight: _minHeight\n      });\n    } // Specify width and height in pixels\n\n  }, {\n    key: \"size\",\n    value: function size(width, height) {\n      return this.withOptions({\n        width: width,\n        height: height\n      });\n    } // Specify blur between 0 and 100\n\n  }, {\n    key: \"blur\",\n    value: function blur(_blur) {\n      return this.withOptions({\n        blur: _blur\n      });\n    }\n  }, {\n    key: \"sharpen\",\n    value: function sharpen(_sharpen) {\n      return this.withOptions({\n        sharpen: _sharpen\n      });\n    } // Specify the desired rectangle of the image\n\n  }, {\n    key: \"rect\",\n    value: function rect(left, top, width, height) {\n      return this.withOptions({\n        rect: {\n          left: left,\n          top: top,\n          width: width,\n          height: height\n        }\n      });\n    } // Specify the image format of the image. 'jpg', 'pjpg', 'png', 'webp'\n\n  }, {\n    key: \"format\",\n    value: function format(_format) {\n      return this.withOptions({\n        format: _format\n      });\n    }\n  }, {\n    key: \"invert\",\n    value: function invert(_invert) {\n      return this.withOptions({\n        invert: _invert\n      });\n    } // Rotation in degrees 0, 90, 180, 270\n\n  }, {\n    key: \"orientation\",\n    value: function orientation(_orientation) {\n      return this.withOptions({\n        orientation: _orientation\n      });\n    } // Compression quality 0-100\n\n  }, {\n    key: \"quality\",\n    value: function quality(_quality) {\n      return this.withOptions({\n        quality: _quality\n      });\n    } // Make it a download link. Parameter is default filename.\n\n  }, {\n    key: \"forceDownload\",\n    value: function forceDownload(download) {\n      return this.withOptions({\n        download: download\n      });\n    } // Flip image horizontally\n\n  }, {\n    key: \"flipHorizontal\",\n    value: function flipHorizontal() {\n      return this.withOptions({\n        flipHorizontal: true\n      });\n    } // Flip image verically\n\n  }, {\n    key: \"flipVertical\",\n    value: function flipVertical() {\n      return this.withOptions({\n        flipVertical: true\n      });\n    } // Ignore crop/hotspot from image record, even when present\n\n  }, {\n    key: \"ignoreImageParams\",\n    value: function ignoreImageParams() {\n      return this.withOptions({\n        ignoreImageParams: true\n      });\n    }\n  }, {\n    key: \"fit\",\n    value: function fit(value) {\n      if (validFits.indexOf(value) === -1) {\n        throw new Error(\"Invalid fit mode \\\"\".concat(value, \"\\\"\"));\n      }\n\n      return this.withOptions({\n        fit: value\n      });\n    }\n  }, {\n    key: \"crop\",\n    value: function crop(value) {\n      if (validCrops.indexOf(value) === -1) {\n        throw new Error(\"Invalid crop mode \\\"\".concat(value, \"\\\"\"));\n      }\n\n      return this.withOptions({\n        crop: value\n      });\n    } // Gets the url based on the submitted parameters\n\n  }, {\n    key: \"url\",\n    value: function url() {\n      return (0, _urlForImage.default)(this.options);\n    } // Synonym for url()\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.url();\n    }\n  }]);\n\n  return ImageUrlBuilder;\n}();\n\nfunction urlBuilder(options) {\n  // Did we get a SanityClient?\n  if (options && _typeof(options.clientConfig) === 'object') {\n    // Inherit config from client\n    return new ImageUrlBuilder(null, {\n      baseUrl: options.clientConfig.apiHost.replace(/^https:\\/\\/api\\./, 'https://cdn.'),\n      projectId: options.clientConfig.projectId,\n      dataset: options.clientConfig.dataset\n    });\n  } // Or just accept the options as given\n\n\n  return new ImageUrlBuilder(null, options);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = urlForImage;\nObject.defineProperty(exports, \"parseSource\", {\n  enumerable: true,\n  get: function get() {\n    return _parseSource.default;\n  }\n});\n\nvar _parseSource = _interopRequireDefault(require(\"./parseSource\"));\n\nvar _parseAssetId = _interopRequireDefault(require(\"./parseAssetId\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar SPEC_NAME_TO_URL_NAME_MAPPINGS = [['width', 'w'], ['height', 'h'], ['format', 'fm'], ['download', 'dl'], ['blur', 'blur'], ['sharpen', 'sharp'], ['invert', 'invert'], ['orientation', 'or'], ['minHeight', 'min-h'], ['maxHeight', 'max-h'], ['minWidth', 'min-w'], ['maxWidth', 'max-w'], ['quality', 'q'], ['fit', 'fit'], ['crop', 'crop']];\n\nfunction urlForImage(options) {\n  var spec = _objectSpread({}, options || {});\n\n  var source = spec.source;\n  delete spec.source;\n  var image = (0, _parseSource.default)(source);\n\n  if (!image) {\n    return null;\n  }\n\n  var asset = (0, _parseAssetId.default)(image.asset._ref); // Compute crop rect in terms of pixel coordinates in the raw source image\n\n  var crop = {\n    left: Math.round(image.crop.left * asset.width),\n    top: Math.round(image.crop.top * asset.height)\n  };\n  crop.width = Math.round(asset.width - image.crop.right * asset.width - crop.left);\n  crop.height = Math.round(asset.height - image.crop.bottom * asset.height - crop.top); // Compute hot spot rect in terms of pixel coordinates\n\n  var hotSpotVerticalRadius = image.hotspot.height * asset.height / 2;\n  var hotSpotHorizontalRadius = image.hotspot.width * asset.width / 2;\n  var hotSpotCenterX = image.hotspot.x * asset.width;\n  var hotSpotCenterY = image.hotspot.y * asset.height;\n  var hotspot = {\n    left: hotSpotCenterX - hotSpotHorizontalRadius,\n    top: hotSpotCenterY - hotSpotVerticalRadius,\n    right: hotSpotCenterX + hotSpotHorizontalRadius,\n    bottom: hotSpotCenterY + hotSpotHorizontalRadius\n  };\n  spec.asset = asset; // If irrelevant, or if we are requested to: don't perform crop/fit based on\n  // the crop/hotspot.\n\n  if (!(spec.rect || spec.focalPoint || spec.ignoreImageParams || spec.crop)) {\n    spec = _objectSpread({}, spec, fit({\n      crop: crop,\n      hotspot: hotspot\n    }, spec));\n  }\n\n  return specToImageUrl(spec);\n} // eslint-disable-next-line complexity\n\n\nfunction specToImageUrl(spec) {\n  var cdnUrl = spec.baseUrl || 'https://cdn.sanity.io';\n  var filename = \"\".concat(spec.asset.id, \"-\").concat(spec.asset.width, \"x\").concat(spec.asset.height, \".\").concat(spec.asset.format);\n  var baseUrl = \"\".concat(cdnUrl, \"/images/\").concat(spec.projectId, \"/\").concat(spec.dataset, \"/\").concat(filename);\n  var params = [];\n\n  if (spec.rect) {\n    // Only bother url with a crop if it actually crops anything\n    var isEffectiveCrop = spec.rect.left != 0 || spec.rect.top != 0 || spec.rect.height != spec.asset.height || spec.rect.width != spec.asset.width;\n\n    if (isEffectiveCrop) {\n      params.push(\"rect=\".concat(spec.rect.left, \",\").concat(spec.rect.top, \",\").concat(spec.rect.width, \",\").concat(spec.rect.height));\n    }\n  }\n\n  if (spec.bg) {\n    params.push(\"bg=\".concat(spec.bg));\n  }\n\n  if (spec.focalPoint) {\n    params.push(\"fp-x=\".concat(spec.focalPoint.x));\n    params.push(\"fp-x=\".concat(spec.focalPoint.y));\n  }\n\n  if (spec.flipHorizontal || spec.flipVertical) {\n    params.push(\"flip=\".concat(spec.flipHorizontal ? 'h' : '').concat(spec.flipVertical ? 'v' : ''));\n  } // Map from spec name to url param name, and allow using the actual param name as an alternative\n\n\n  SPEC_NAME_TO_URL_NAME_MAPPINGS.forEach(function (mapping) {\n    var _mapping = _slicedToArray(mapping, 2),\n        specName = _mapping[0],\n        param = _mapping[1];\n\n    if (typeof spec[specName] !== 'undefined') {\n      params.push(\"\".concat(param, \"=\").concat(encodeURIComponent(spec[specName])));\n    } else if (typeof spec[param] !== 'undefined') {\n      params.push(\"\".concat(param, \"=\").concat(encodeURIComponent(spec[param])));\n    }\n  });\n\n  if (params.length === 0) {\n    return baseUrl;\n  }\n\n  return \"\".concat(baseUrl, \"?\").concat(params.join('&'));\n}\n\nfunction fit(source, spec) {\n  var result = {\n    width: spec.width,\n    height: spec.height // If we are not constraining the aspect ratio, we'll just use the whole crop\n\n  };\n\n  if (!(spec.width && spec.height)) {\n    result.rect = source.crop;\n    return result;\n  }\n\n  var crop = source.crop;\n  var hotspot = source.hotspot; // If we are here, that means aspect ratio is locked and fitting will be a bit harder\n\n  var desiredAspectRatio = spec.width / spec.height;\n  var cropAspectRatio = crop.width / crop.height;\n\n  if (cropAspectRatio > desiredAspectRatio) {\n    // The crop is wider than the desired aspect ratio. That means we are cutting from the sides\n    var _height = crop.height;\n\n    var _width = _height * desiredAspectRatio;\n\n    var _top = crop.top; // Center output horizontally over hotspot\n\n    var hotspotXCenter = (hotspot.right - hotspot.left) / 2 + hotspot.left;\n\n    var _left = hotspotXCenter - _width / 2; // Keep output within crop\n\n\n    if (_left < crop.left) {\n      _left = crop.left;\n    } else if (_left + _width > crop.left + crop.width) {\n      _left = crop.left + crop.width - _width;\n    }\n\n    result.rect = {\n      left: Math.round(_left),\n      top: Math.round(_top),\n      width: Math.round(_width),\n      height: Math.round(_height)\n    };\n    return result;\n  } // The crop is taller than the desired ratio, we are cutting from top and bottom\n\n\n  var width = crop.width;\n  var height = width / desiredAspectRatio;\n  var left = crop.left; // Center output vertically over hotspot\n\n  var hotspotYCenter = (hotspot.bottom - hotspot.top) / 2 + hotspot.top;\n  var top = hotspotYCenter - height / 2; // Keep output rect within crop\n\n  if (top < crop.top) {\n    top = crop.top;\n  } else if (top + height > crop.top + crop.height) {\n    top = crop.top + crop.height - height;\n  }\n\n  result.rect = {\n    left: Math.max(0, Math.floor(left)),\n    top: Math.max(0, Math.floor(top)),\n    width: Math.round(width),\n    height: Math.round(height)\n  };\n  return result;\n} // For backwards-compatibility","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseSource;\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n} // Convert an asset-id, asset or image to an image record suitable for processing\n// eslint-disable-next-line complexity\n\n\nfunction parseSource(source) {\n  if (!source) {\n    return null;\n  }\n\n  var image;\n\n  if (typeof source === 'string' && isUrl(source)) {\n    // Someone passed an existing image url?\n    image = {\n      asset: {\n        _ref: urlToId(source)\n      }\n    };\n  } else if (typeof source === 'string') {\n    // Just an asset id\n    image = {\n      asset: {\n        _ref: source\n      }\n    };\n  } else if (typeof source._ref === 'string') {\n    // We just got passed an asset directly\n    image = {\n      asset: source\n    };\n  } else if (source._id) {\n    // If we were passed an image asset document\n    image = {\n      asset: {\n        _ref: source._id\n      }\n    };\n  } else if (source.asset && source.asset.url && !source.asset._ref) {\n    image = {\n      asset: {\n        _ref: urlToId(source.asset.url)\n      }\n    };\n  } else if (_typeof(source.asset) === 'object') {\n    image = source;\n  } else {\n    // We got something that does not look like an image, or it is an image\n    // that currently isn't sporting an asset.\n    return null;\n  }\n\n  if (source.crop) {\n    image.crop = source.crop;\n  }\n\n  if (source.hotspot) {\n    image.hotspot = source.hotspot;\n  }\n\n  return applyDefaults(image);\n}\n\nfunction isUrl(url) {\n  return /^https?:\\/\\//.test(\"\".concat(url));\n}\n\nfunction urlToId(url) {\n  var parts = url.split('/').slice(-1);\n  return \"image-\".concat(parts[0]).replace(/\\.([a-z]+)$/, '-$1');\n} // Mock crop and hotspot if image lacks it\n\n\nfunction applyDefaults(image) {\n  if (image.crop && image.hotspot) {\n    return image;\n  }\n\n  return _objectSpread({\n    crop: {\n      left: 0,\n      top: 0,\n      bottom: 0,\n      right: 0\n    },\n    hotspot: {\n      x: 0.5,\n      y: 0.5,\n      height: 1.0,\n      width: 1.0\n    }\n  }, image);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAssetId;\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar example = 'image-Tb9Ew8CXIwaY6R1kjMvI0uRR-2000x3000-jpg';\n\nfunction parseAssetId(ref) {\n  var _ref$split = ref.split('-'),\n      _ref$split2 = _slicedToArray(_ref$split, 4),\n      id = _ref$split2[1],\n      dimensionString = _ref$split2[2],\n      format = _ref$split2[3];\n\n  if (!id || !dimensionString || !format) {\n    throw new Error(\"Malformed asset _ref '\".concat(ref, \"'. Expected an id like \\\"\").concat(example, \"\\\".\"));\n  }\n\n  var _dimensionString$spli = dimensionString.split('x'),\n      _dimensionString$spli2 = _slicedToArray(_dimensionString$spli, 2),\n      imgWidthStr = _dimensionString$spli2[0],\n      imgHeightStr = _dimensionString$spli2[1];\n\n  var width = +imgWidthStr;\n  var height = +imgHeightStr;\n  var isValidAssetId = isFinite(width) && isFinite(height);\n\n  if (!isValidAssetId) {\n    throw new Error(\"Malformed asset _ref '\".concat(ref, \"'. Expected an id like \\\"\").concat(example, \"\\\".\"));\n  }\n\n  return {\n    id: id,\n    width: width,\n    height: height,\n    format: format\n  };\n}","'use strict';\n\nvar objectAssign = require('object-assign');\n\nvar buildMarksTree = require('./buildMarksTree');\n\nvar nestLists = require('./nestLists');\n\nvar generateKeys = require('./generateKeys');\n\nvar mergeSerializers = require('./mergeSerializers'); // Properties to extract from props and pass to serializers as options\n\n\nvar optionProps = ['projectId', 'dataset', 'imageOptions'];\n\nvar isDefined = function isDefined(val) {\n  return typeof val !== 'undefined';\n};\n\nvar defaults = {\n  imageOptions: {}\n};\n\nfunction blocksToNodes(h, properties, defaultSerializers, serializeSpan) {\n  var props = objectAssign({}, defaults, properties);\n  var rawBlocks = Array.isArray(props.blocks) ? props.blocks : [props.blocks];\n  var keyedBlocks = generateKeys(rawBlocks);\n  var blocks = nestLists(keyedBlocks, props.listNestMode);\n  var serializers = mergeSerializers(defaultSerializers, props.serializers || {});\n  var options = optionProps.reduce(function (opts, key) {\n    var value = props[key];\n\n    if (isDefined(value)) {\n      opts[key] = value;\n    }\n\n    return opts;\n  }, {});\n\n  function serializeNode(node, index, siblings, isInline) {\n    if (isList(node)) {\n      return serializeList(node);\n    }\n\n    if (isListItem(node)) {\n      return serializeListItem(node, findListItemIndex(node, siblings));\n    }\n\n    if (isSpan(node)) {\n      return serializeSpan(node, serializers, index, {\n        serializeNode: serializeNode\n      });\n    }\n\n    return serializeBlock(node, index, isInline);\n  }\n\n  function findListItemIndex(node, siblings) {\n    var index = 0;\n\n    for (var i = 0; i < siblings.length; i++) {\n      if (siblings[i] === node) {\n        return index;\n      }\n\n      if (!isListItem(siblings[i])) {\n        continue;\n      }\n\n      index++;\n    }\n\n    return index;\n  }\n\n  function serializeBlock(block, index, isInline) {\n    var tree = buildMarksTree(block);\n    var children = tree.map(function (node, i, siblings) {\n      return serializeNode(node, i, siblings, true);\n    });\n    var blockProps = {\n      key: block._key || 'block-' + index,\n      node: block,\n      isInline: isInline,\n      serializers: serializers,\n      options: options\n    };\n    return h(serializers.block, blockProps, children);\n  }\n\n  function serializeListItem(block, index) {\n    var key = block._key;\n    var tree = buildMarksTree(block);\n    var children = tree.map(serializeNode);\n    return h(serializers.listItem, {\n      node: block,\n      serializers: serializers,\n      index: index,\n      key: key,\n      options: options\n    }, children);\n  }\n\n  function serializeList(list) {\n    var type = list.listItem;\n    var level = list.level;\n    var key = list._key;\n    var children = list.children.map(serializeNode);\n    return h(serializers.list, {\n      key: key,\n      level: level,\n      type: type,\n      options: options\n    }, children);\n  } // Default to false, so `undefined` will evaluate to the default here\n\n\n  var renderContainerOnSingleChild = Boolean(props.renderContainerOnSingleChild);\n  var nodes = blocks.map(serializeNode);\n\n  if (renderContainerOnSingleChild || nodes.length > 1) {\n    var containerProps = props.className ? {\n      className: props.className\n    } : {};\n    return h(serializers.container, containerProps, nodes);\n  }\n\n  if (nodes[0]) {\n    return nodes[0];\n  }\n\n  return typeof serializers.empty === 'function' ? h(serializers.empty) : serializers.empty;\n}\n\nfunction isList(block) {\n  return block._type === 'list' && block.listItem;\n}\n\nfunction isListItem(block) {\n  return block._type === 'block' && block.listItem;\n}\n\nfunction isSpan(block) {\n  return typeof block === 'string' || block.marks || block._type === 'span';\n}\n\nmodule.exports = blocksToNodes;","'use strict';\n\nvar defaultMarks = ['strong', 'em', 'code', 'underline', 'strike-through'];\n\nvar buildMarksTree = function buildMarksTree(block) {\n  var children = block.children,\n      markDefs = block.markDefs;\n\n  if (!children || !children.length) {\n    return [];\n  }\n\n  var sortedMarks = children.map(sortMarksByOccurences);\n  var rootNode = {\n    _type: 'span',\n    children: []\n  };\n  var nodeStack = [rootNode];\n  children.forEach(function (span, i) {\n    var marksNeeded = sortedMarks[i];\n\n    if (!marksNeeded) {\n      var lastNode = nodeStack[nodeStack.length - 1];\n      lastNode.children.push(span);\n      return;\n    }\n\n    var pos = 1; // Start at position one. Root is always plain and should never be removed. (?)\n\n    if (nodeStack.length > 1) {\n      for (pos; pos < nodeStack.length; pos++) {\n        var mark = nodeStack[pos].markKey;\n        var index = marksNeeded.indexOf(mark); // eslint-disable-next-line max-depth\n\n        if (index === -1) {\n          break;\n        }\n\n        marksNeeded.splice(index, 1);\n      }\n    } // Keep from beginning to first miss\n\n\n    nodeStack = nodeStack.slice(0, pos); // Add needed nodes\n\n    var currentNode = findLastParentNode(nodeStack);\n    marksNeeded.forEach(function (mark) {\n      var node = {\n        _type: 'span',\n        _key: span._key,\n        children: [],\n        mark: markDefs.find(function (def) {\n          return def._key === mark;\n        }) || mark,\n        markKey: mark\n      };\n      currentNode.children.push(node);\n      nodeStack.push(node);\n      currentNode = node;\n    }); // Split at newlines to make individual line chunks, but keep newline\n    // characters as individual elements in the array. We use these characters\n    // in the span serializer to trigger hard-break rendering\n\n    if (isTextSpan(span)) {\n      var lines = span.text.split('\\n');\n\n      for (var line = lines.length; line-- > 1;) {\n        lines.splice(line, 0, '\\n');\n      }\n\n      currentNode.children = currentNode.children.concat(lines);\n    } else {\n      currentNode.children = currentNode.children.concat(span);\n    }\n  });\n  return rootNode.children;\n}; // We want to sort all the marks of all the spans in the following order:\n// 1. Marks that are shared amongst the most adjacent siblings\n// 2. Non-default marks (links, custom metadata)\n// 3. Built-in, plain marks (bold, emphasis, code etc)\n\n\nfunction sortMarksByOccurences(span, i, spans) {\n  if (!span.marks || span.marks.length === 0) {\n    return span.marks || [];\n  }\n\n  var markOccurences = span.marks.reduce(function (occurences, mark) {\n    occurences[mark] = occurences[mark] ? occurences[mark] + 1 : 1;\n\n    for (var siblingIndex = i + 1; siblingIndex < spans.length; siblingIndex++) {\n      var sibling = spans[siblingIndex];\n\n      if (sibling.marks && Array.isArray(sibling.marks) && sibling.marks.indexOf(mark) !== -1) {\n        occurences[mark]++;\n      } else {\n        break;\n      }\n    }\n\n    return occurences;\n  }, {});\n  var sortByOccurence = sortMarks.bind(null, markOccurences); // Slicing because sort() mutates the input\n\n  return span.marks.slice().sort(sortByOccurence);\n}\n\nfunction sortMarks(occurences, markA, markB) {\n  var aOccurences = occurences[markA] || 0;\n  var bOccurences = occurences[markB] || 0;\n\n  if (aOccurences !== bOccurences) {\n    return bOccurences - aOccurences;\n  }\n\n  var aDefaultPos = defaultMarks.indexOf(markA);\n  var bDefaultPos = defaultMarks.indexOf(markB); // Sort default marks last\n\n  if (aDefaultPos !== bDefaultPos) {\n    return aDefaultPos - bDefaultPos;\n  } // Sort other marks simply by key\n\n\n  if (markA < markB) {\n    return -1;\n  } else if (markA > markB) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction isTextSpan(node) {\n  return node._type === 'span' && typeof node.text === 'string' && (Array.isArray(node.marks) || typeof node.marks === 'undefined');\n}\n\nfunction findLastParentNode(nodes) {\n  for (var i = nodes.length - 1; i >= 0; i--) {\n    var node = nodes[i];\n\n    if (node._type === 'span' && node.children) {\n      return node;\n    }\n  }\n\n  return undefined;\n}\n\nmodule.exports = buildMarksTree;","'use strict';\n\nvar objectAssign = require('object-assign');\n/* eslint-disable max-depth, complexity */\n\n\nfunction nestLists(blocks) {\n  var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'html';\n  var tree = [];\n  var currentList = void 0;\n\n  for (var i = 0; i < blocks.length; i++) {\n    var block = blocks[i];\n\n    if (!isListBlock(block)) {\n      tree.push(block);\n      currentList = null;\n      continue;\n    } // Start of a new list?\n\n\n    if (!currentList) {\n      currentList = listFromBlock(block);\n      tree.push(currentList);\n      continue;\n    } // New list item within same list?\n\n\n    if (blockMatchesList(block, currentList)) {\n      currentList.children.push(block);\n      continue;\n    } // Different list props, are we going deeper?\n\n\n    if (block.level > currentList.level) {\n      var newList = listFromBlock(block);\n\n      if (mode === 'html') {\n        // Because HTML is kinda weird, nested lists needs to be nested within list items\n        // So while you would think that we could populate the parent list with a new sub-list,\n        // We actually have to target the last list element (child) of the parent.\n        // However, at this point we need to be very careful - simply pushing to the list of children\n        // will mutate the input, and we don't want to blindly clone the entire tree.\n        // Clone the last child while adding our new list as the last child of it\n        var lastListItem = lastChild(currentList);\n        var newLastChild = objectAssign({}, lastListItem, {\n          children: lastListItem.children.concat(newList)\n        }); // Swap the last child\n\n        currentList.children[currentList.children.length - 1] = newLastChild;\n      } else {\n        currentList.children.push(newList);\n      } // Set the newly created, deeper list as the current\n\n\n      currentList = newList;\n      continue;\n    } // Different list props, are we going back up the tree?\n\n\n    if (block.level < currentList.level) {\n      // Current list has ended, and we need to hook up with a parent of the same level and type\n      var match = findListMatching(tree[tree.length - 1], block);\n\n      if (match) {\n        currentList = match;\n        currentList.children.push(block);\n        continue;\n      } // Similar parent can't be found, assume new list\n\n\n      currentList = listFromBlock(block);\n      tree.push(currentList);\n      continue;\n    } // Different list props, different list style?\n\n\n    if (block.listItem !== currentList.listItem) {\n      var _match = findListMatching(tree[tree.length - 1], {\n        level: block.level\n      });\n\n      if (_match && _match.listItem === block.listItem) {\n        currentList = _match;\n        currentList.children.push(block);\n        continue;\n      } else {\n        currentList = listFromBlock(block);\n        tree.push(currentList);\n        continue;\n      }\n    } // eslint-disable-next-line no-console\n\n\n    console.warn('Unknown state encountered for block', block);\n    tree.push(block);\n  }\n\n  return tree;\n}\n\nfunction isListBlock(block) {\n  return Boolean(block.listItem);\n}\n\nfunction blockMatchesList(block, list) {\n  return block.level === list.level && block.listItem === list.listItem;\n}\n\nfunction listFromBlock(block) {\n  return {\n    _type: 'list',\n    _key: block._key + '-parent',\n    level: block.level,\n    listItem: block.listItem,\n    children: [block]\n  };\n}\n\nfunction lastChild(block) {\n  return block.children && block.children[block.children.length - 1];\n}\n\nfunction findListMatching(rootNode, matching) {\n  var filterOnType = typeof matching.listItem === 'string';\n\n  if (rootNode._type === 'list' && rootNode.level === matching.level && filterOnType && rootNode.listItem === matching.listItem) {\n    return rootNode;\n  }\n\n  var node = lastChild(rootNode);\n\n  if (!node) {\n    return false;\n  }\n\n  return findListMatching(node, matching);\n}\n\nmodule.exports = nestLists;","'use strict';\n\nvar objectAssign = require('object-assign');\n\nmodule.exports = function (blocks) {\n  return blocks.map(function (block) {\n    if (block._key) {\n      return block;\n    }\n\n    return objectAssign({\n      _key: getStaticKey(block)\n    }, block);\n  });\n};\n\nfunction getStaticKey(item) {\n  return checksum(JSON.stringify(item)).toString(36).replace(/[^A-Za-z0-9]/g, '');\n}\n/* eslint-disable no-bitwise */\n\n\nfunction checksum(str) {\n  var hash = 0;\n  var strlen = str.length;\n\n  if (strlen === 0) {\n    return hash;\n  }\n\n  for (var i = 0; i < strlen; i++) {\n    hash = (hash << 5) - hash + str.charCodeAt(i);\n    hash &= hash; // Convert to 32bit integer\n  }\n\n  return hash;\n}\n/* eslint-enable no-bitwise */","'use strict';\n\nvar React = require('react');\n\nvar _require = require('@sanity/block-content-to-hyperscript/internals'),\n    getSerializers = _require.getSerializers;\n\nvar renderNode = React.createElement;\n\nvar _getSerializers = getSerializers(renderNode),\n    defaultSerializers = _getSerializers.defaultSerializers,\n    serializeSpan = _getSerializers.serializeSpan;\n\nmodule.exports = {\n  serializeSpan: serializeSpan,\n  serializers: defaultSerializers,\n  renderProps: {\n    nestMarks: true\n  }\n};"],"sourceRoot":""}